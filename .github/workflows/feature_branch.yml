name: CI with Gradle (Feature branch)

#on:
#  push:
#    branches:
#      - "*"
#    paths-ignore:
#      - 'main/**'
#  pull_request:
#    branches: [ "main" ]

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, closed, reopened]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4
      - name: Extract branch name
        id: extract_branch
        run: |
          echo ${GITHUB_REF##*/}
          echo "BRANCH_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
#          echo ::set-output name=BRANCH_NAME::${GITHUB_REF#refs/*/}

      - name: Use branch name in another step
        run: |
          echo "The branch name is ${{ env.BRANCH_NAME }}"

      - name: Check if Branch is in PR
        if: github.event_name == 'push'
        id: checkbranch
        uses: actions/github-script@v7
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            check_branch_pr = require('./.github/scripts/check_branch_pr.js')
            return await check_branch_pr({github, context, core})
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          GITHUB_USERNAME: ${{ secrets.USERNAME }}
#          GITHUB_USERNAME: ${{ steps.secrets.outputs.USERNAME }}
#          GITHUB_TOKEN: ${{ steps.secrets.outputs.TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          BRANCH_NAME: ${{ env.BRANCH_NAME }}

      - name: Setup Output for Branch in PR
        id: inprcheck
        run: |
          echo '::set-output name=BRANCH_IN_PR::${{ env.BRANCH_IN_PR }}'
        env:
          BRANCH_IN_PR: ${{ steps.checkbranch.outputs.result }}

#      - name: Validate Gradle wrapper
#        uses: gradle/wrapper-validation-action@v2
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#          cache: gradle
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x ./gradlew
#
#      - name: Build with Gradle Wrapper
#        run: ./gradlew build --no-daemon
#
#      - name: Load properties from gradle.properties
#        id: load-properties
#        run: |
#          majorVersion=$(grep -E '^majorVersion' gradle.properties | cut -d'=' -f2 | tr -d '[:space:]')
#          minorVersion=$(grep -E '^minorVersion' gradle.properties | cut -d'=' -f2 | tr -d '[:space:]')
#          buildVersion=$(grep -E '^buildVersion' gradle.properties | cut -d'=' -f2 | tr -d '[:space:]')
#          echo "majorVersion=$majorVersion" >> $GITHUB_ENV
#          echo "minorVersion=$minorVersion" >> $GITHUB_ENV
#          echo "buildVersion=$buildVersion" >> $GITHUB_ENV
#
#      - name: Construct .jar file name
#        run: echo "jarFileName=backend-${majorVersion}.${minorVersion}.${buildVersion}.jar" >> $GITHUB_ENV
#
#      - name: Upload build artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: jar-file
#          path: build/libs/${{ env.jarFileName }}